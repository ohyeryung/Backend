services:
  blue:
    image: ${DOCKER_IMAGE_NAME}:blue
    container_name: blue-container
    ports:
      - "8081:8080"  # Blue 컨테이너의 8080 포트를 호스트의 8081에 매핑
    environment:
      # 필요한 Spring 프로파일 설정
      # DB 환경 변수
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # 파일 업로드 제한
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE}

      # AWS S3 관련 설정
      AWS_REGION: ${AWS_REGION}
      BUCKET_NAME: ${BUCKET_NAME}
      ACCESS_KEY: ${ACCESS_KEY}
      SECRET_KEY: ${SECRET_KEY}

      # JWT 토큰 관련 설정
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      REFRESH_TOKEN_EXPIRATION: ${REFRESH_TOKEN_EXPIRATION}

      REDIS_HOST: redis  # Redis 컨테이너와 연결
      REDIS_PORT: ${REDIS_PORT}

      # Kakao OAuth2 설정
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}

      # Google OAuth2 설정
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

      # Naver OAuth2 설정
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}

      #Oauth2 redirect_uri 설정
      PROD_REDIRECT_URI: ${PROD_REDIRECT_URI}

      # 시간대 설정
      TZ: Asia/Seoul
    depends_on:
      - redis
    networks:
      - app-network

  green:
    image: ${DOCKER_IMAGE_NAME}:green
    container_name: green-container
    ports:
      - "8082:8080"  # Green 컨테이너의 8080 포트를 호스트의 8082에 매핑
    environment:
      # 필요한 Spring 프로파일 설정
      # DB 환경 변수
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}

      # 파일 업로드 제한
      MAX_FILE_SIZE: ${MAX_FILE_SIZE}
      MAX_REQUEST_SIZE: ${MAX_REQUEST_SIZE}

      # AWS S3 관련 설정
      AWS_REGION: ${AWS_REGION}
      BUCKET_NAME: ${BUCKET_NAME}
      ACCESS_KEY: ${ACCESS_KEY}
      SECRET_KEY: ${SECRET_KEY}

      # JWT 토큰 관련 설정
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      ACCESS_TOKEN_EXPIRATION: ${ACCESS_TOKEN_EXPIRATION}
      REFRESH_TOKEN_EXPIRATION: ${REFRESH_TOKEN_EXPIRATION}

      REDIS_HOST: redis  # Redis 컨테이너와 연결
      REDIS_PORT: ${REDIS_PORT}

      # Kakao OAuth2 설정
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      KAKAO_CLIENT_SECRET: ${KAKAO_CLIENT_SECRET}

      # Google OAuth2 설정
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}

      # Naver OAuth2 설정
      NAVER_CLIENT_ID: ${NAVER_CLIENT_ID}
      NAVER_CLIENT_SECRET: ${NAVER_CLIENT_SECRET}

      #Oauth2 redirect_uri 설정
      PROD_REDIRECT_URI: ${PROD_REDIRECT_URI}

      # 시간대 설정
      TZ: Asia/Seoul
    depends_on:
      - redis
    networks:
      - app-network

  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
    container_name: nginx-container
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - blue
      - green
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt  # SSL 인증서 마운트
      - ./Nginx/config:/etc/nginx/conf.d   # nginx.conf 파일 마운트
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis-container
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge